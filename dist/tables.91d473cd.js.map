{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0bb32a9368f30f62.js","vendor/datatables/dataTables.bootstrap4.min.js","../node_modules/datatables.net/js/jquery.dataTables.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"e099400491d473cd\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/*!\n DataTables Bootstrap 4 integration\n ©2011-2017 SpryMedia Ltd - datatables.net/license\n*/\n(function(c){\"function\"===typeof define&&define.amd?define([\"jquery\",\"datatables.net\"],function(a){return c(a,window,document)}):\"object\"===typeof exports?module.exports=function(a,d){a||(a=window);if(!d||!d.fn.dataTable)d=require(\"datatables.net\")(a,d).$;return c(d,a,a.document)}:c(jQuery,window,document)})(function(c,a,d,m){var f=c.fn.dataTable;c.extend(!0,f.defaults,{dom:\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\nrenderer:\"bootstrap\"});c.extend(f.ext.classes,{sWrapper:\"dataTables_wrapper dt-bootstrap4\",sFilterInput:\"form-control form-control-sm\",sLengthSelect:\"custom-select custom-select-sm form-control form-control-sm\",sProcessing:\"dataTables_processing card\",sPageButton:\"paginate_button page-item\"});f.ext.renderer.pageButton.bootstrap=function(a,h,r,s,j,n){var o=new f.Api(a),t=a.oClasses,k=a.oLanguage.oPaginate,u=a.oLanguage.oAria.paginate||{},e,g,p=0,q=function(d,f){var l,h,i,b,m=function(a){a.preventDefault();\n!c(a.currentTarget).hasClass(\"disabled\")&&o.page()!=a.data.action&&o.page(a.data.action).draw(\"page\")};l=0;for(h=f.length;l<h;l++)if(b=f[l],Array.isArray(b))q(d,b);else{g=e=\"\";switch(b){case \"ellipsis\":e=\"&#x2026;\";g=\"disabled\";break;case \"first\":e=k.sFirst;g=b+(0<j?\"\":\" disabled\");break;case \"previous\":e=k.sPrevious;g=b+(0<j?\"\":\" disabled\");break;case \"next\":e=k.sNext;g=b+(j<n-1?\"\":\" disabled\");break;case \"last\":e=k.sLast;g=b+(j<n-1?\"\":\" disabled\");break;default:e=b+1,g=j===b?\"active\":\"\"}e&&(i=c(\"<li>\",\n{\"class\":t.sPageButton+\" \"+g,id:0===r&&\"string\"===typeof b?a.sTableId+\"_\"+b:null}).append(c(\"<a>\",{href:\"#\",\"aria-controls\":a.sTableId,\"aria-label\":u[b],\"data-dt-idx\":p,tabindex:a.iTabIndex,\"class\":\"page-link\"}).html(e)).appendTo(d),a.oApi._fnBindAction(i,{action:b},m),p++)}},i;try{i=c(h).find(d.activeElement).data(\"dt-idx\")}catch(v){}q(c(h).empty().html('<ul class=\"pagination\"/>').children(\"ul\"),s);i!==m&&c(h).find(\"[data-dt-idx=\"+i+\"]\").trigger(\"focus\")};return f});\n","/*! DataTables 1.10.24\n * ©2008-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.24\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t// Surprisingly this is faster than [].concat.apply\n\t// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\tvar _flatten = function (out, val) {\n\t\tif (Array.isArray(val)) {\n\t\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t\t_flatten(out, val[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tout.push(val);\n\t\t}\n\t  \n\t\treturn out;\n\t}\n\t\n\t// Array.isArray polyfill.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\tif (! Array.isArray) {\n\t    Array.isArray = function(arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t    };\n\t}\n\t\n\t// .trim() polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function () {\n\t    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t  };\n\t}\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = (cell.innerHTML).trim();\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn ? false : true;\n\t\n\t\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t\t$(thead).children('tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && Array.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw !== undefined ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'mouseup', function(e) {\n\t\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tsearchFn.call(jqFilter[0]);\n\t\t\t\t}, 10);\n\t\t\t} )\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t regex ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = Array.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css('max-height', scrollY);\n\t\tif (! scroll.bCollapse) {\n\t\t\t$(scrollBody).css('height', scrollY);\n\t\t}\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.trigger('scroll');\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( Array.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t};\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings.push.apply( settings, a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( Array.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\tif ( Array.isArray(selector) ) {\n\t\t\treturn $.map( selector, function (item) {\n\t\t\t\treturn __table_selector(item, a);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector !== undefined && selector !== null ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar that = this;\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\t\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnSaveState( settings );\n\t\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t} );\n\t\n\t\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $(_flatten( [], cells ));\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, internalOpts );\n\t\tvar rows = this.rows( rowSelector, internalOpts );\n\t\tvar i, ien, j, jen;\n\t\n\t\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\t\tvar a = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells( cellsNoOpts, opts ) :\n\t\t\tcellsNoOpts;\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn Array.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.24\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would add around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit).\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\t\tfilter: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, search or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n"],"names":[],"version":3,"file":"tables.91d473cd.js.map","sourceRoot":"/__parcel_source_root/"}